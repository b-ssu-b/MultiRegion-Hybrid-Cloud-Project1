Parameters:
  LatestAmiId:
    Description: (DO NOT CHANGE)
    Type: 'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    Default: '/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2'
    AllowedValues:
      - /aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instances. Linked to AWS Parameter
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
Resources:
##싱가폴리전 AWS 클라이언트##
#vpc1, igw1 생성 및 연결
  VPC1:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.3.0.0/16
      EnableDnsSupport: true 
      EnableDnsHostnames: true 
      Tags:
        - Key: Name
          Value: Singapore-VPC
  IGW1:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: Singapore-IGW
  InternetGatewayAttachment1:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref IGW1
      VpcId: !Ref VPC1
#서브넷: 퍼블릭2,프라이빗2,연동2
  PublicSN:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC1
      CidrBlock: 10.3.1.0/24
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      Tags:
        - Key: Name  
          Value: Singapore-Public-SN
  PrivateSN01:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC1
      CidrBlock: 10.3.3.0/24
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      Tags:
        - Key: Name
          Value: Singapore-Private-SN-1
  PrivateSN02:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC1
      CidrBlock: 10.3.4.0/24
      AvailabilityZone: !Select [ 2, !GetAZs '' ]
      Tags:
        - Key: Name
          Value: Singapore-Private-SN-2
  TransitSN01:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC1
      CidrBlock: 10.3.5.0/24
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      Tags:
        - Key: Name      
          Value: Singapore-Transit-SN-1
  TransitSN02:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC1
      CidrBlock: 10.3.6.0/24
      AvailabilityZone: !Select [ 2, !GetAZs '' ]
      Tags:
        - Key: Name      
          Value: Singapore-Transit-SN-2 
#싱가폴 RT 3개 생성및 기본 라우팅
#퍼블릭 RT
  PublicRT01:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC1
      Tags:
        - Key: Name
          Value: Singapore-Public-RT 
  DefaultPublicRoute:
    Type: AWS::EC2::Route
    DependsOn: InternetGatewayAttachment1
    Properties:
      RouteTableId: !Ref PublicRT01
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref IGW1             
#private RT
  PrivateRT01:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC1
      Tags:
        - Key: Name
          Value: Singapore-Private-RT
  NATRoute01:
    Type: AWS::EC2::Route
    DependsOn: SingaporeNATInstance1
    Properties:
      RouteTableId: !Ref PrivateRT01
      DestinationCidrBlock: 0.0.0.0/0
      NetworkInterfaceId: !Ref SingaporeENI1Eth0 
#Transit RT=private RT
  TransitRT:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC1
      Tags:
        - Key: Name
          Value: Singapore-Transit-RT
#RT 각 서브넷에 부착
#퍼블릭 SN 2개-퍼블릭 RT
  PublicSNRTAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRT01
      SubnetId: !Ref PublicSN
#프라이빗 SN3,4-프라이빗 RT1
  PrivateSN01RTAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRT01
      SubnetId: !Ref PrivateSN01
  PrivateSN02RTAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRT01
      SubnetId: !Ref PrivateSN02     
#Transit SN 2개-Transit RT
  TransitSN01RTAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref TransitRT
      SubnetId: !Ref TransitSN01      
  TransitSN02RTAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref TransitRT
      SubnetId: !Ref TransitSN02

#NAT인스턴스1 EIP 할당, NAT ENI 생성, 연결
  VPC1EIP1:
      Type: AWS::EC2::EIP
      Properties:
          Domain: vpc       
  SingaporeENI1Eth0:
    Type: AWS::EC2::NetworkInterface
    Properties:
        SubnetId: !Ref PublicSN
        Description: NAT-Instance1-eth0
        GroupSet:
        - !Ref SG1
        PrivateIpAddress: 10.3.1.100
        Tags:
          - Key: Name
            Value: NAT-Instance1-eth0 
  VPCAssociateEIP1:
    Type: AWS::EC2::EIPAssociation
    DependsOn: SingaporeENI1Eth0
    Properties:
      AllocationId: !GetAtt VPC1EIP1.AllocationId
      NetworkInterfaceId: !Ref SingaporeENI1Eth0                
#싱가폴리전 NAT 인스턴스 1
  SingaporeNATInstance1:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: ami-028fd7926f7a531af #nat기능 들어간 리눅스2
      InstanceType: t2.micro
      KeyName: !Ref KeyName
      SourceDestCheck: false #소스/대상 확인 옵션 off
      Tags:
        - Key: Name
          Value: Singapore-NAT-1
      NetworkInterfaces:
        - NetworkInterfaceId: !Ref SingaporeENI1Eth0
          DeviceIndex: 0

#싱가폴 리전 웹서버 1
  SingaporeWebSrv1:
    Type: AWS::EC2::Instance
    DependsOn: NATRoute01
    Properties:
      ImageId: !Ref LatestAmiId
      InstanceType: t2.micro
      KeyName: !Ref KeyName
      Tags:
        - Key: Name
          Value: Singapore-Websrv-1
      NetworkInterfaces:
        - DeviceIndex: 0
          SubnetId: !Ref PrivateSN01
          GroupSet:
          - !Ref SG3
          PrivateIpAddress: 10.3.3.100          
      UserData:
        Fn::Base64: |
          #!/bin/bash
          (
          echo "qwe123"
          echo "qwe123"
          ) | passwd --stdin root
          sed -i "s/^PasswordAuthentication no/PasswordAuthentication yes/g" /etc/ssh/sshd_config
          sed -i "s/^#PermitRootLogin yes/PermitRootLogin yes/g" /etc/ssh/sshd_config
          service sshd restart
          hostnamectl --static set-hostname Singapore-AWS-WebSrv1
          amazon-linux-extras install -y lamp-mariadb10.2-php7.2 php7.2
          yum install -y httpd lynx
          systemctl start httpd && systemctl enable httpd
          mkdir /var/www/inc
          curl -o /var/www/inc/dbinfo.inc https://cloudneta-book.s3.ap-northeast-2.amazonaws.com/chapter8/dbinfo.inc
          curl -o /var/www/html/db.php https://cloudneta-book.s3.ap-northeast-2.amazonaws.com/chapter8/db2.php
          rm -rf /var/www/html/index.html
          echo "<h1>CloudNet@ FullLab - SingaporeRegion - Websrv1</h1>" > /var/www/html/index.html
          curl -o /opt/pingcheck.sh https://cloudneta-book.s3.ap-northeast-2.amazonaws.com/chapter8/pingchecker2.sh
          chmod +x /opt/pingcheck.sh
          cat <<EOT>> /etc/crontab
          */3 * * * * root /opt/pingcheck.sh
          EOT
          echo "1" > /var/www/html/HealthCheck.txt       
                
#NAT 인스턴스 보안그룹        
  SG1:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref VPC1
      GroupDescription: VPC1-NATInstance-SG
      Tags:
      - Key : Name
        Value : VPC1-NATInstance-SG
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: '22'
        ToPort: '22'
        CidrIp: 0.0.0.0/0
      - IpProtocol: icmp  
        FromPort: -1
        ToPort: -1
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: '80'
        ToPort: '80'
        CidrIp: 0.0.0.0/0 
      - IpProtocol: tcp  
        FromPort: '443' 
        ToPort: '443'
        CidrIp: 0.0.0.0/0                  
  SG2:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref VPC1
      GroupDescription: Seoul-ALB-SG
      Tags:
      - Key : Name
        Value : Seoul-ALB-SG
      SecurityGroupIngress:                
      - IpProtocol: tcp
        FromPort: '80' 
        ToPort: '80'
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp 
        FromPort: '443' 
        ToPort: '443'
        CidrIp: 0.0.0.0/0 

#웹서버 인스턴스 보안그룹        
  SG3:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref VPC1
      GroupDescription: VPC1-Websrv-SG
      Tags:
      - Key : Name
        Value : VPC1-Websrv-SG
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: '22'
        ToPort: '22'
        CidrIp: 0.0.0.0/0
      - IpProtocol: icmp
        FromPort: -1
        ToPort: -1
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: '80'
        ToPort: '80'
        CidrIp: 0.0.0.0/0  
      - IpProtocol: tcp  
        FromPort: '443' 
        ToPort: '443'
        CidrIp: 0.0.0.0/0         
 
#Route 53 DNS 해결장치 보안그룹           
  SG4: 
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref VPC1
      GroupDescription: VPC1-Route53-SG
      Tags:
      - Key : Name
        Value : VPC1-Route53-SG
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: '53'
        ToPort: '53'
        CidrIp: 0.0.0.0/0 
      - IpProtocol: udp
        FromPort: '53'
        ToPort: '53'
        CidrIp: 0.0.0.0/0        

##Route53##
#프라이빗 호스팅 영역 생성
  PrivateDNS1:
    Type: AWS::Route53::HostedZone
    DependsOn: VPC1
    Properties:
      HostedZoneConfig:
        Comment: Private hosted zone for awssingapore.internal
      Name: awssingapore.internal
      VPCs:
        - VPCId: !Ref VPC1
          VPCRegion: ap-southeast-1
      HostedZoneTags:
        - Key: Name
          Value: Singapore-aws-internal-domain
#웹서버1 A레코드 추가
  DNSRecordSingaporeWebsrv1:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId: !Ref PrivateDNS1
      Comment: DNS name for Singapore AWS WEBSRV1 instance.
      Name: websrv1.awssingapore.internal 
      Type: A
      TTL: 60
      ResourceRecords:
      - !GetAtt SingaporeWebSrv1.PrivateIp 
#AWS<-IDC dns 쿼리
  InboundEP: 
    Type: AWS::Route53Resolver::ResolverEndpoint
    Properties:
      Direction: INBOUND
      Name: AWS-Singapore Inbound EP  
      Tags:
        - Key: Name
          Value: Singapore-aws-inbound      
      SecurityGroupIds:
        - !Ref SG4          
      IpAddresses:
        - SubnetId: !Ref PrivateSN01
          Ip: 10.3.3.250
        - SubnetId: !Ref PrivateSN02
          Ip: 10.3.4.250

#AWS->IDC dns 쿼리         
  OutboundEP: 
    Type: AWS::Route53Resolver::ResolverEndpoint
    Properties:
      Direction: OUTBOUND
      Name: AWS-Singapore Outbound EP
      Tags:
        - Key: Name
          Value: Singapore-aws-outbound      
      SecurityGroupIds:
        - !Ref SG4             
      IpAddresses:
        - SubnetId: !Ref PrivateSN01
          Ip: 10.3.3.251
        - SubnetId: !Ref PrivateSN02
          Ip: 10.3.4.251        

#outbound forward rule         
  ForwardRule1: 
    Type: AWS::Route53Resolver::ResolverRule
    Properties:
      DomainName: idcsingapore.internal
      Name: idcsingapore-rule
      ResolverEndpointId: !Ref OutboundEP
      RuleType: FORWARD
      Tags:
        - Key: Name
          Value: idcsingapore-rule      
      TargetIps:
        - Ip: 10.4.1.200
          Port: 53
  ForwardRule2: 
    Type: AWS::Route53Resolver::ResolverRule
    Properties:
      DomainName: idcseoul.internal
      Name: idcseoul-rule
      ResolverEndpointId: !Ref OutboundEP
      RuleType: FORWARD
      Tags:
        - Key: Name
          Value: idcseoul-rule      
      TargetIps:
        - Ip: 10.2.1.200
          Port: 53
  ForwardRule3: 
    Type: AWS::Route53Resolver::ResolverRule
    Properties:
      DomainName: awsseoul.internal
      Name: awsseoul-rule
      ResolverEndpointId: !Ref OutboundEP
      RuleType: FORWARD
      Tags:
        - Key: Name
          Value: awsseoul-rule
      TargetIps:
        - Ip: 10.1.3.250
          Port: 53
        - Ip: 10.1.4.250
          Port: 53      
          
  ResolverRuleAssociation1:
    Type: AWS::Route53Resolver::ResolverRuleAssociation
    Properties:
      Name: Resolver-Rule-Association
      ResolverRuleId: !Ref ForwardRule1
      VPCId: !Ref VPC1
  ResolverRuleAssociation2:
    Type: AWS::Route53Resolver::ResolverRuleAssociation
    Properties:
      Name: Resolver-Rule-Association
      ResolverRuleId: !Ref ForwardRule2
      VPCId: !Ref VPC1
  ResolverRuleAssociation3:
    Type: AWS::Route53Resolver::ResolverRuleAssociation
    Properties:
      Name: Resolver-Rule-Association
      ResolverRuleId: !Ref ForwardRule3
      VPCId: !Ref VPC1

##싱가폴리전 IDC 센터##
#vpc2 생성
  IDCVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.4.0.0/16
      Tags: 
        - Key: Name
          Value: Singapore-IDC-VPC
      EnableDnsSupport: false 
      EnableDnsHostnames: false
#IDC VPC DHCP options
  IDCDNSOptions:
    Type: AWS::EC2::DHCPOptions
    Properties:
      DomainName: idcsingapore.internal
      DomainNameServers:
        - 10.4.1.200
        - 8.8.8.8
      NtpServers:
        - 203.248.240.140
        - 168.126.3.6
      Tags:
        - Key: Name
          Value: Singapore-IDCvpc-DHCPOptions
  IDCDNSOptionsAssociation:
    Type: AWS::EC2::VPCDHCPOptionsAssociation
    Properties:
      DhcpOptionsId: !Ref IDCDNSOptions
      VpcId: !Ref IDCVPC                
# IDC IGW 생성
  IDCIGW:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: IDC-IGW2      
# VPC-IGW 연결 
  IDCIGWAttachment2:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref IDCIGW
      VpcId: !Ref IDCVPC
#IDC VPC에 PUBLIC SN 생성     
  IDCPublicSN:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref IDCVPC
      CidrBlock: 10.4.1.0/24
      AvailabilityZone: !Select [ 0, !GetAZs '']
      Tags:
        - Key: Name
          Value: IDC-Public-SN
#IDC 퍼블릭 RT
  IDCPublicRT:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref IDCVPC
      Tags:
        - Key: Name
          Value: Singapore-IDC-Public-RT
  IDCPublicRoute:
    Type: AWS::EC2::Route
    DependsOn: IDCIGWAttachment2
    Properties:
      RouteTableId: !Ref IDCPublicRT
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref IDCIGW  
#IDCpublic SN-RT연결
  IDCPublicSNRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref IDCPublicRT
      SubnetId: !Ref IDCPublicSN    
#IDC-CGW 인스턴스: IDC-CGW eip, eni           
  IDCCGWEIP:
      Type: AWS::EC2::EIP
      Properties:
          Domain: vpc
  IDCCGWENIEth0: 
    Type: AWS::EC2::NetworkInterface
    Properties:
      SubnetId: !Ref IDCPublicSN
      Description: IDC-CGWENI eth0
      PrivateIpAddress: 10.4.1.240
      GroupSet:
        - !Ref IDCCGWSG
      Tags:
          - Key: Name
            Value: Singapore-IDC-CGW-Instance-eth0         
#IDC-CGW서버 eip, eni 연결          
  IDCCGWENIAssociateEIP:
    Type: AWS::EC2::EIPAssociation
    Properties:
      AllocationId: !GetAtt IDCCGWEIP.AllocationId
      NetworkInterfaceId: !Ref IDCCGWENIEth0           
#IDC-CGW인스턴스(VPN)
  IDCCGWInstance: 
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !Ref LatestAmiId
      InstanceType: t2.micro
      KeyName: !Ref KeyName
      NetworkInterfaces:
        - NetworkInterfaceId: !Ref IDCCGWENIEth0
          DeviceIndex: 0 
      SourceDestCheck: false #소스/대상 확인 옵션 off
      Tags:
        - Key: Name
          Value: Singapore-IDC-CGW                        
      UserData:
        Fn::Base64: |
          #!/bin/bash
          hostnamectl --static set-hostname Singapore-IDC-CGW          
          yum -y install tcpdump openswan
          cat <<EOF>> /etc/sysctl.conf
          net.ipv4.ip_forward=1
          net.ipv4.conf.all.accept_redirects = 0
          net.ipv4.conf.all.send_redirects = 0
          net.ipv4.conf.default.send_redirects = 0
          net.ipv4.conf.eth0.send_redirects = 0
          net.ipv4.conf.default.accept_redirects = 0
          net.ipv4.conf.eth0.accept_redirects = 0
          net.ipv4.conf.ip_vti0.rp_filter = 0
          net.ipv4.conf.eth0.rp_filter = 0
          net.ipv4.conf.default.rp_filter = 0
          net.ipv4.conf.all.rp_filter = 0
          EOF
          sysctl -p /etc/sysctl.conf
          curl -o /etc/ipsec.d/vpnconfig.sh https://cloudneta-book.s3.ap-northeast-2.amazonaws.com/chapter6/6_lab_s2s-vpnconfig.sh
          chmod +x /etc/ipsec.d/vpnconfig.sh      
#IDC-DNS서버#                     
#IDC-dns 서버 eip              
  IDCDNSEIP:
      Type: AWS::EC2::EIP
      Properties:
          Domain: vpc
#IDC-dns서버 ENI
  IDCDNSSrvENIEth0: 
    Type: AWS::EC2::NetworkInterface
    Properties:
      SubnetId: !Ref IDCPublicSN
      Description: IDC-DNSSRV eth0
      GroupSet:
        - !Ref IDCDNSSG
      PrivateIpAddress: 10.4.1.200
      Tags:
          - Key: Name
            Value: Singapore-IDC-DNSSRV-eth0          
#IDC-dns서버 eip, eni 연결          
  IDCDNSENIAssociateEIP:
    Type: AWS::EC2::EIPAssociation
    DependsOn: IDCDNSSrvENIEth0
    Properties:
      AllocationId: !GetAtt IDCDNSEIP.AllocationId
      NetworkInterfaceId: !Ref IDCDNSSrvENIEth0           
#IDC-dns 서버
  IDCDNSSrv:
    Type: AWS::EC2::Instance
    Properties:   
      ImageId: ami-028a5cff2f5a0f6c3 #ubuntu
      InstanceType: t2.micro
      KeyName: !Ref KeyName
      Tags:
        - Key: Name
          Value: Singapore-IDC-DNS
      NetworkInterfaces:
        - NetworkInterfaceId: !Ref IDCDNSSrvENIEth0
          DeviceIndex: 0
      UserData: 
        Fn::Base64: |
          #!/bin/bash
          hostnamectl --static set-hostname Singapore-IDC-DNSSRV
          sed -i "s/^127.0.0.1 localhost/127.0.0.1 localhost VPC2-Singapore-IDC-DNSSRV/g" /etc/hosts
          apt-get update -y
          apt-get install bind9 bind9-doc language-pack-ko -y
          # named.conf.options
          cat <<EOF> /etc/bind/named.conf.options
          options {
             directory "/var/cache/bind";
             recursion yes;
             allow-query { any; };
             forwarders {
                   8.8.8.8;
                    };
              forward only;
              auth-nxdomain no;
          };
          zone "awssingapore.internal" {
              type forward;
              forward only;
              forwarders { 10.3.3.250; 10.3.4.250; };
          };
          zone "awsseoul.internal" {
              type forward;
              forward only;
              forwarders { 10.1.3.250; 10.1.4.250; };
          };
          zone "idcseoul.internal" {
              type forward;
              forward only;
              forwarders { 10.2.1.200; };
          };
          EOF

          # named.conf.local
          cat <<EOF> /etc/bind/named.conf.local
          zone "idcsingapore.internal" {
              type master;
              file "/etc/bind/db.idcsingapore.internal"; # zone file path
          };

          zone "4.10.in-addr.arpa" {
              type master;
              file "/etc/bind/db.10.4";  # 10.4.0.0/16 subnet
          };
          EOF

          # db.idcsingapore.internal
          cat <<EOF> /etc/bind/db.idcsingapore.internal
          \$TTL 30
          @ IN SOA idcsingapore.internal. root.idcsingapore.internal. (
            2019122114 ; serial
            3600       ; refresh
            900        ; retry
            604800     ; expire
            86400      ; minimum ttl
          )

          ; dns server
          @      IN NS ns1.idcsingapore.internal.

          ; ip address of dns server
          ns1    IN A  10.4.1.200

          ; Hosts
          dbsrv   IN A  10.4.1.100
          dnssrv   IN A  10.4.1.200
          EOF
          # db.10.4
          cat <<EOF> /etc/bind/db.10.4
          \$TTL 30
          @ IN SOA idcsingapore.internal. root.idcsingapore.internal. (
            2019122114 ; serial
            3600       ; refresh
            900        ; retry
            604800     ; expire
            86400      ; minimum ttl
          )

          ; dns server
          @      IN NS ns1.idcsingapore.internal.

          ; ip address of dns server
          3      IN PTR  ns1.idcsingapore.internal.

          ; A Record list
          100.1    IN PTR  dbsrv.idcsingapore.internal.
          200.1    IN PTR  dnssrv.idcsingapore.internal.
          EOF
          # bind9 service start
          systemctl start bind9 && systemctl enable bind9

#IDC-DB서버          
  IDCDBInstance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !Ref LatestAmiId
      InstanceType: t2.micro
      KeyName: !Ref KeyName
      Tags:
        - Key: Name
          Value: Singapore-IDC-DB
      NetworkInterfaces:
        - DeviceIndex: 0
          SubnetId: !Ref IDCPublicSN
          GroupSet:
          - !Ref IDCDBSG
          PrivateIpAddress: 10.4.1.100
          AssociatePublicIpAddress: true                    
      UserData:
        Fn::Base64: |
          #!/bin/bash
          hostnamectl --static set-hostname Singapore-IDC-DB
          yum install -y mariadb-server mariadb lynx
          systemctl start mariadb && systemctl enable mariadb
          echo -e "\n\nqwe123\nqwe123\ny\ny\ny\ny\n" | /usr/bin/mysql_secure_installation
          # mysql -uroot -pqwe123 -e "CREATE USER 'gasida'@'localhost' IDENTIFIED BY 'qwe123';"
          # mysql -uroot -pqwe123 -e "GRANT ALL PRIVILEGES ON  *.* TO 'gasida'@'%' IDENTIFIED BY 'qwe123' WITH GRANT OPTION;"
          mysql -uroot -pqwe123 -e "CREATE DATABASE sample; GRANT SELECT ON *.* TO 'gasida'@'%' IDENTIFIED BY 'qwe123'; flush privileges;"
          mysql -uroot -pqwe123 -e "USE sample;CREATE TABLE EMPLOYEES (ID int(11) UNSIGNED AUTO_INCREMENT PRIMARY KEY,NAME VARCHAR(45),ADDRESS VARCHAR(90));"          
          cat <<EOT> /etc/my.cnf
          [mysqld]
          datadir=/var/lib/mysql
          socket=/var/lib/mysql/mysql.sock
          symbolic-links=0
          log-bin=mysql-bin
          general_log=ON
          character-set-server=utf8
          server-id=2
          read_only=1
          replicate-do-db='sample'
          [mysqld_safe]
          log-error=/var/log/mariadb/mariadb.log
          pid-file=/var/run/mariadb/mariadb.pid
          !includedir /etc/my.cnf.d
          EOT
          systemctl restart mariadb
          cat <<EOT> /home/ec2-user/list.txt
          10.1.3.100
          websrv1.awsseoul.internal
          10.1.4.100
          websrv2.awsseoul.internal
          10.2.1.100
          dbsrv.idcseoul.internal
          10.2.1.200
          dnssrv.idcseoul.internal
          10.3.3.100
          websrv1.awssingapore.internal
          10.4.1.100
          dbsrv.idcsingapore.internal
          10.4.1.200
          dnssrv.idcsingapore.internal
          EOT
          curl -o /home/ec2-user/pingall.sh https://cloudneta-book.s3.ap-northeast-2.amazonaws.com/chapter6/pingall.sh --silent
          chmod +x /home/ec2-user/pingall.sh

#IDC CGW보안그룹
  IDCCGWSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref IDCVPC
      GroupDescription: IDC-CGW-SG
      Tags:
      - Key : Name
        Value : IDC-CGW-SG
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: '22'
        ToPort: '22'
        CidrIp: 0.0.0.0/0
      - IpProtocol: udp
        FromPort: '500'
        ToPort: '500'
        CidrIp: 0.0.0.0/0        
      - IpProtocol: icmp
        FromPort: -1
        ToPort: -1
        CidrIp: 0.0.0.0/0
      - IpProtocol: udp
        FromPort: '4500'
        ToPort: '4500'
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: '3306'
        ToPort: '3306'
        CidrIp: 0.0.0.0/0 
      - IpProtocol: tcp
        FromPort: '53'
        ToPort: '53'
        CidrIp: 0.0.0.0/0
      - IpProtocol: udp
        FromPort: '53'
        ToPort: '53'
        CidrIp: 0.0.0.0/0 
      - IpProtocol: tcp 
        FromPort: '443' 
        ToPort: '443'
        CidrIp: 0.0.0.0/0 
      - IpProtocol: tcp
        FromPort: '80' 
        ToPort: '80'
        CidrIp: 0.0.0.0/0                          
#IDC DB보안그룹
  IDCDBSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref IDCVPC
      GroupDescription: IDC-DB-SG
      Tags:
      - Key : Name
        Value : IDC-DB-SG
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: '22'
        ToPort: '22'
        CidrIp: 0.0.0.0/0
      - IpProtocol: icmp
        FromPort: -1
        ToPort: -1
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: '3306'
        ToPort: '3306'
        CidrIp: 0.0.0.0/0            
#IDC DNS보안그룹
  IDCDNSSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref IDCVPC
      GroupDescription: IDC-DNS-SG
      Tags:
      - Key : Name
        Value : IDC-DNS-SG
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: '22'
        ToPort: '22'
        CidrIp: 0.0.0.0/0
      - IpProtocol: icmp
        FromPort: -1
        ToPort: -1
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp 
        FromPort: '53'
        ToPort: '53'
        CidrIp: 0.0.0.0/0
      - IpProtocol: udp
        FromPort: '53'
        ToPort: '53'
        CidrIp: 0.0.0.0/0          
       
#########TGW로 SingaporeVPC,IDC 연결##########
#TGW 생성
  TGW2:
    Type: AWS::EC2::TransitGateway
    Properties:
      Tags:
        - Key: Name
          Value: TGW2-Singapore
##TGW-Singapore-vpc 연결; vpc peering##
  TGW2Att1:
    Type: AWS::EC2::TransitGatewayAttachment
    DependsOn: VPC1
    Properties:
      VpcId: !Ref VPC1
      SubnetIds:
      - !Ref TransitSN01
      - !Ref TransitSN02
      TransitGatewayId: !Ref TGW2
      Tags:
        - Key: Name
          Value: TGW2-Att1-Singapore-AWS
#Singapore vpc RT에 TGW 라우팅 경로 추가
  SingaporeVPCTGWRoute:
    Type: AWS::EC2::Route
    DependsOn: TGW2Att1
    Properties:
      RouteTableId: !Ref PrivateRT01
      DestinationCidrBlock: 10.0.0.0/8
      TransitGatewayId: !Ref TGW2                          
##TGW-Singapore-idcvpc; s2s vpn 연결##
#IDCvpc-CGW 생성
  IDCCGW:
    Type: AWS::EC2::CustomerGateway
    Properties:
      Type: ipsec.1
      BgpAsn: 65000
      IpAddress: !Ref IDCCGWEIP
      Tags:
        - Key: Name
          Value: IDC-CGW
#site to site VPN 연결
  VPCAWSVpnConnection:
    Type: AWS::EC2::VPNConnection
    Properties:
      Type: ipsec.1
      CustomerGatewayId: !Ref IDCCGW
      TransitGatewayId: !Ref TGW2
      VpnTunnelOptionsSpecifications:
        - PreSharedKey: cloudneta
      StaticRoutesOnly: true #정적 라우팅
      Tags:
        - Key: Name
          Value: Singapore-AWS-VPNConnection-IDC
#Singapore IDC RT에 TGW 라우팅 경로 추가: 
  SingaporeIDCTGWRoute1:
    Type: AWS::EC2::Route
    DependsOn: IDCCGWInstance
    Properties:
      RouteTableId: !Ref IDCPublicRT
      DestinationCidrBlock: 10.0.0.0/8
      InstanceId: !Ref IDCCGWInstance 
#콘솔: 정적 경로 추가, vpn tunnel initiate, TGW Peering >> Region Connection Complete!
